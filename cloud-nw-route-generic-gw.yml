heat_template_version: 2015-10-15

description: |
   ####  Creates:
   #### - Cloud Network suitable for north-south traffic
   #### - Gateway Instance (router)
   #### Author: Brian King
   #### version: 0.0.4a
   #### last modified: 2018-11-23

parameter_groups:

- label: Gateway Instance Settings
  parameters:
    - gwName
    - gwImage
    - gwFlavor

- label: Network Settings
  parameters:
    - netRange
    - netName

- label: DNS Settings
  parameters:
    - primaryDNSIP
    - secondaryDNSIP

parameters:

#begin gw params
  gwName:
    type: string
    label: 'Name of gateway instance'
    default: 'gatewayInstance00'

  gwImage:
    type: string
    default: CentOS 7 (PVHVM) (Orchestration)
    label: Gateway Instance Image Name or UUID
    description: Image to be used for Gateway Instance
    constraints:
      - custom_constraint: glance.image

  gwFlavor:
    type: string
    default: 2 GB General Purpose v1
    label: Gateway Instance Flavor Name or ID, such as "15 GB I/O v1"
    description: Must be a valid Rackspace Cloud Flavor
    constraints:
      - custom_constraint: nova.flavor

#begin network params

  netName:
    type: string
    label: 'Cloud Network Name'
    description: Name of Cloud Network
    default: 'cloudNetwork'

  netRange:
    type: string
    label: 'Enter the first 3 octets of desired network range (such as 192.168.100)'
    default: '172.19.241'
    constraints:
      - allowed_pattern: '^(?:(?:^|\.)(?:2(?:5[0-5]|[0-4]\d)|1?\d?\d)){3}$'
        description: "please enter a valid 3 octets"

#begin DNS params

  primaryDNSIP:
    type: string
    label: 'Primary DNS Server. Mouse over the ? for each region''s DNS IPs.'
    description: 'DFW: 72.3.128.240, HKG: 120.136.32.62, IAD: 69.20.0.164, LON: 83.138.151.80, ORD: 173.203.4.8, SYD: 119.9.60.62'
    default: 72.3.128.240
    constraints:
    - allowed_values:
      - 72.3.128.240
      - 120.136.32.62
      - 69.20.0.164
      - 83.138.151.80
      - 173.203.4.8
      - 119.9.60.62

  secondaryDNSIP:
    type: string
    label: 'Secondary DNS Server. Mouse over the ? for each region''s DNS IPs.'
    description: 'DFW: 72.3.128.241, HKG: 120.136.32.63, IAD: 69.20.0.196, LON: 83.138.151.81, ORD: 173.203.4.9, SYD: 119.9.60.63'
    default: 72.3.128.241
    constraints:
    - allowed_values:
      - 72.3.128.241
      - 120.136.32.63
      - 69.20.0.196
      - 83.138.151.81
      - 173.203.4.9
      - 119.9.60.63

resources:

# begin Cloud Networks resources

  cloudNet:
    type: OS::Neutron::Net
    properties:
      name: { get_param: [netName] }

  cloudNetSubnet:
    type: OS::Neutron::Subnet
    properties:
      name: { get_param: [netName] }
      network: { get_attr: [cloudNet, name] }
      ip_version: 4
      dns_nameservers: [{ get_param: [primaryDNSIP] }, { get_param: [secondaryDNSIP] }]
      cidr: { list_join: ['.',  [ { get_param: netRange }, '0/24' ]] }
      gateway_ip:  { list_join: ['.',  [ { get_param: netRange }, '1' ]] }
      allocation_pools: [{'end': { list_join: ['.',  [ { get_param: netRange }, '254' ]] }, 'start': { list_join: ['.',  [ { get_param: netRange }, '9' ]] } }]

  cloudNetGatewayPort:
    type: OS::Neutron::Port
    properties:
      fixed_ips: [{'subnet_id': { get_attr: [cloudNetSubnet, name] }, 'ip_address': { get_attr: [cloudNetSubnet, gateway_ip]} }]
      name: { get_param: [netName] }
      network: { get_attr: [cloudNet, name] }

#begin Gateway Instance resources

  gwPass:
      type: OS::Heat::RandomString

  gwSSHKey:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: "OS::stack_name" }
      save_private_key: true

  gwInstance:
    type: OS::Nova::Server
    properties:
      name: { get_param : gwName }
      image: { get_param: gwImage }
      admin_pass: { get_attr: [ gwPass, value ] }
      key_name: { get_resource: gwSSHKey }
      flavor: general1-2
      config_drive: True
      metadata:
          - created_by:
      networks:
        - network: '00000000-0000-0000-0000-000000000000'
        - network: '11111111-1111-1111-1111-111111111111'
        - port: { get_resource: cloudNetGatewayPort }

outputs:
  cloudNetworkName:
    value: { get_attr: [cloudNet, name] }
    description: 'Cloud Network name'

  cloudNetworkRange:
    value: { get_attr: [cloudNetSubnet, cidr] }
    description: 'Cloud Network range'

  cloudNetworkGatewayIP:
    value: { get_attr: [cloudNetSubnet, gateway_ip] }
    description: 'Cloud Network gateway IP'

  dnsIPs:
    value: { get_attr: [cloudNetSubnet, dns_nameservers] }
    description: 'DNS Server IPs'

  gwPublicIPs:
      value: { get_attr: [gwInstance, networks, public] }
      description: 'Public IPs of Gateway Instance'

  gwPassDisplay:
    value: { get_attr: [gwPass, value ] }
    description: 'Admin Password of Gateway Instance'

  gwPrivateSSHKey:
    value: { get_attr: ['gwSSHKey', 'private_key'] }
    description: 'private Key for accessing Gateway Instance'
